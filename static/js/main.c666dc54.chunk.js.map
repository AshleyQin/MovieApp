{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","image","title","text","SearchBar","state","value","imagesOnly","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","name","size","type","placeholder","onChange","this","checked","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","console","log","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","doOnlyImages","backdrop_path","original_title","overview","filter","poster_path","id","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","member","job","cast","catch","error","location","runtime","NotFound","App","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c666dc54.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () =>{\r\n    return(\r\n        <div className=\"rmdb-header\">\r\n            <div className=\"rmdb-header-content\">\r\n                <Link to=\"/\">\r\n                    <img className=\"rmdb-logo\" src=\"./images/reactMovie_logo.png\" alt=\"rmdb-logo\"/>\r\n                </Link>\r\n                <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\"/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","// Configuration for TMDB\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '74b3dc7cd3764707a39b48ecd634ac50';\n\n// Images\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes\nconst BACKDROP_SIZE = 'w1280';\n\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n    return(\r\n        <div className=\"rmdb-heroimage\" \r\n        style={{\r\n            background:`linear-gradient(to bottom, rgba(0,0,0,0) 39%, rgba(0,0,0,0) 41%, rgba(0,0,0,0.65) 100%),\r\n            url('${props.image}'), #1c1c1c`\r\n        }}>\r\n            <div className=\"rmdb-heroimage-content\">\r\n                <div className=\"rmdb-heroimage-text\">\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default HeroImage ;","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Checkbox } from 'semantic-ui-react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component{\r\n    state = {\r\n        value: '',\r\n        imagesOnly: false\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({value: event.target.value})\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.callback(this.state.value)\r\n        }, 500);\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\"/>\r\n                    <input type=\"text\" className=\"rmdb-searchbar-input\" placeholder=\"search\" onChange={this.doSearch} value={this.state.value}/>\r\n                </div>\r\n                <div className=\"rmdb-checkbox\">\r\n                <input type=\"checkbox\" checked={this.props.imagesOnly} onChange={this.props.onChange}/>\r\n                <label>Images Only</label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n\r\n    const renderElements = () =>{\r\n        const gridElements = props.children.map((element, i) => {\r\n            if (element == null) {\r\n                return;\r\n            }\r\n\r\n            return(\r\n                <div key={i} className=\"rmdb-grid-element\">\r\n                    {element}\r\n                </div>\r\n            )\r\n        })\r\n        return gridElements;\r\n    }\r\n    return(\r\n        <div className=\"rmdb-grid\">\r\n            {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n            <div className=\"rmdb-grid-content\">\r\n                {renderElements()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFourColGrid.propTypes = {\r\n    header:PropTypes.string,\r\n    loading: PropTypes.bool\r\n}\r\nexport default FourColGrid;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = (props) => {\r\n    return(\r\n        <div className=\"rmdb-moviethumb\">\r\n            {props.clickable ?\r\n            <Link to={{pathname:`/${props.movieId}`, movieName:`${props.movieName}`}}>\r\n                <img src={props.image} alt=\"movieThumb\" />\r\n            </Link>\r\n            :\r\n            <img src={props.image} alt=\"movieThumb\" />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nMovieThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    movieName: PropTypes.string\r\n}\r\nexport default MovieThumb;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) =>{\r\n    return(\r\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () =>{\r\n    return(\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport {API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE} from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css';\r\n\r\nclass Home extends Component{\r\n    state = {\r\n        movies:    [],\r\n        heroImage: null,\r\n        loading:   false,\r\n        currentPage:0,\r\n        totalPages: 0,\r\n        searchTerm: '',\r\n        imagesOnly: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({ loading:true });\r\n        const endpoint = `${API_URL}movie/upcoming?api_key=${API_KEY}&language=en-US&page=1`;\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    searchItems = (searchTerm) =>{\r\n        console.log(searchTerm);\r\n        let endpoint = '';\r\n        this.setState({\r\n            movies:[],\r\n            loading: true,\r\n            searchTerm\r\n        })\r\n\r\n        if(searchTerm === ''){\r\n            endpoint = `${API_URL}movie/upcoming?api_key=${API_KEY}&language=en-US&page=1`;\r\n        }else{\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n        }\r\n        console.log(\"initaial serach\" , endpoint)\r\n\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        let endpoint = '';\r\n        this.setState({loading:true });\r\n        \r\n        if(this.state.searchTerm === ''){\r\n            endpoint = `${API_URL}movie/upcoming?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n        }else{\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n        }\r\n        console.log(\"endpoint\", endpoint)\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems = (endpoint) =>{\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            this.setState({\r\n                movies: [...this.state.movies, ...result.results],\r\n                heroImage: this.state.heroImage || result.results[0],\r\n                loading : false,\r\n                currentPage : result.page,\r\n                totalPages : result.total_pages\r\n            })\r\n        })\r\n    }\r\n    doOnlyImages = (event) => {\r\n        this.setState({ imagesOnly: event.target.checked})\r\n        console.log(this.state.imagesOnly)\r\n    }\r\n    render() {\r\n        return(\r\n        <div className=\"rmdb-home\">\r\n            {this.state.heroImage?\r\n            <div>\r\n                <HeroImage \r\n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n                title={this.state.heroImage.original_title}\r\n                text={this.state.heroImage.overview}\r\n                />\r\n                <SearchBar onChange={ this.doOnlyImages } imagesOnly = {this.state.imagesOnly} callback={this.searchItems}/>\r\n            </div>:null}\r\n            <div className=\"rmdb-home-grid\">\r\n                <FourColGrid header={this.state.searchTerm ? 'Search Result' : 'popular Movies'}\r\n                             loading= {this.state.loading}>\r\n                                 {this.state.movies.filter( (element)=> this.state.imagesOnly ? element.poster_path : true  ).map((element, i) =>{\r\n                                     return <MovieThumb key={i} clickable={true} \r\n                                            image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                            movieId={element.id}\r\n                                            movieName={element.original_title}\r\n                                            />\r\n                                 })}\r\n                </FourColGrid>\r\n                {this.state.loading ? <Spinner /> : null}\r\n                {(this.state.currentPage < this.state.totalPages && !this.state.loading) ? \r\n                <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} /> : null}\r\n            </div>\r\n            \r\n        </div>\r\n\r\n        )   \r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) =>{\r\n    return(\r\n        <div className=\"rmdb-navigation\">\r\n            <div className=\"rmdb-navigation-content\">\r\n                <Link to=\"/\" >\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>/</p>\r\n                <p>{props.movie}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE} from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = (props) =>{\r\n    return(\r\n        <div className=\"rmdb-movieinfo\" style={{background:props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`: '#000'}}>\r\n            <div className=\"rmdb-movieinfo-content\">\r\n                <div className=\"rmdb-movieinfo-thumb\">\r\n                    <MovieThumb image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`: './images/no_image.jpg'}\r\n                                clickable={false}\r\n                    />\r\n                </div>\r\n                <div className=\"rmdb-movieinfo-text\">\r\n                    <h1>{props.movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{props.movie.overview}</p>\r\n                    <h3>IMDB RATING</h3>\r\n                    <div className=\"rmdb-rating\">\r\n                        <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n                        <p className=\"rmdb-score\">\r\n                            {props.movie.vote_average}\r\n                        </p>\r\n                    </div>\r\n                    {props.directors.length > 1 ? <h3>Directors</h3> : <h3>Director</h3>}\r\n                    {props.directors.map((element, i) =>{\r\n                        return <p key={i} className=\"rmdb-director\">\r\n                            {element.name}\r\n                        </p>\r\n                    })}\r\n                </div>\r\n                <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'CAD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}\n\nexport const calcInflation = (money, years) =>{\n  let rate = 0.015;\n  money = Math.pow(1 + rate, years);\n}","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport {calcTime, convertMoney} from '../../../helpers';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => {\r\n    return(\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Running Time: {calcTime(props.time)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\"/>\r\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\"/>\r\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) =>{\r\n    const POSTER_SIZE = \"w154\";\r\n\r\n    return(\r\n        <div className=\"rmdb-actor\">\r\n            <img src={props.actor.profile_path \r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'} \r\n                alt=\"actorthumb\"/>\r\n            <span className=\"rmdb-actor-name\">\r\n                {props.actor.name}\r\n            </span>\r\n            <span className=\"rmdb-actor-character\">\r\n                {props.actor.character}\r\n            </span>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Actor;","import React, {Component} from 'react';\r\nimport {API_URL, API_KEY} from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from'../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component{\r\n    state = {\r\n        movie : null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({loading:true})\r\n        //fetch Movie\r\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            console.log(result)\r\n            if(result.status_code){\r\n                this.setState({loading: false});\r\n            }else{\r\n                this.setState({movie: result}, () => {\r\n                    //fetch actors\r\n                    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`\r\n                    fetch(endpoint)\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        const directors = result.crew.filter((member) => member.job === \"Director\");\r\n\r\n                        this.setState({\r\n                            actors: result.cast,\r\n                            directors,\r\n                            loading: false\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n        })\r\n        .catch(error => console.error('Error:', error))\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"rmdb-movie\">\r\n                {this.state.movie ? \r\n                <div>\r\n                    <Navigation movie={this.props.location.movieName}/>\r\n                    <MovieInfo movie={this.state.movie} directors={this.state.directors}/>\r\n                    <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n                    </div>\r\n                    : null}\r\n                {this.state.actors ? \r\n                <div className=\"rmdb-movie-grid\">\r\n                    <FourColGrid header={'Actors'}>\r\n                        \r\n                        {this.state.actors.map((element, i) =>{\r\n                        return <Actor key={i} actor={element} />\r\n                    \r\n                    })}\r\n                    </FourColGrid>\r\n                    </div>\r\n                    : null}\r\n                {!this.state.actors && this.state.loading ? <h1>No Movie Found!</h1> : null}\r\n                {this.state.loading ? <Spinner/> : null}\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;","import React from 'react'\r\n\r\nconst NotFound = () =>{\r\n    return(\r\n        <div>\r\n            <h1>It seems like you are in the wrong place:)</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport Movie from '../Movie/Movie';\r\nimport NotFound from '../elements/NotFound/NotFound'\r\n\r\nconst App = () => {\r\n    return(\r\n        <BrowserRouter>\r\n            <React.Fragment>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/\" component={Home} exact />\r\n                    <Route path=\"/:movieId\" component={Movie} exact />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </React.Fragment>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}